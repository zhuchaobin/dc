<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xai.tt.dc.biz.mapper.T1ArInfMapper">
  <resultMap id="BaseResultMap" type="com.xai.tt.dc.client.model.T1ArInf">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="AR_ID" jdbcType="CHAR" property="arId" />
    <result column="PROCESS_INST_ID" jdbcType="VARCHAR" property="processInstId" />
    <result column="AR_Tp" jdbcType="CHAR" property="arTp" />
    <result column="Fnc_Entp" jdbcType="INTEGER" property="fncEntp" />
    <result column="Ustrm_Splr" jdbcType="INTEGER" property="ustrmSplr" />
    <result column="StgCo" jdbcType="INTEGER" property="stgco" />
    <result column="Bnk" jdbcType="INTEGER" property="bnk" />
    <result column="Lgstc_Co" jdbcType="INTEGER" property="lgstcCo" />
    <result column="Ins_Co" jdbcType="INTEGER" property="insCo" />
    <result column="SplChain_Co" jdbcType="INTEGER" property="splchainCo" />
    <result column="AR_StDt" jdbcType="CHAR" property="arStdt" />
    <result column="AR_EdDt" jdbcType="CHAR" property="arEddt" />
    <result column="PckUpGds_Cyc" jdbcType="INTEGER" property="pckupgdsCyc" />
    <result column="BTp" jdbcType="CHAR" property="btp" />
    <result column="Fnc_Pctg" jdbcType="REAL" property="fncPctg" />
    <result column="Prpy_Gld_Rto" jdbcType="REAL" property="prpyGldRto" />
    <result column="Lmt" jdbcType="REAL" property="lmt" />
    <result column="Crdn" jdbcType="REAL" property="crdn" />
    <result column="Clspos_Ln" jdbcType="REAL" property="clsposLn" />
    <result column="SvcFee_CMd" jdbcType="CHAR" property="svcfeeCmd" />
    <result column="SplOv_CrrOv_Mod" jdbcType="CHAR" property="splovCrrovMod" />
    <result column="AR_St" jdbcType="CHAR" property="arSt" />
    <result column="Tms" jdbcType="TIMESTAMP" property="tms" />
    <result column="Crt_Psn" jdbcType="VARCHAR" property="crtPsn" />
    <result column="Crt_Tm" jdbcType="TIMESTAMP" property="crtTm" />
    <result column="Plchd" jdbcType="VARCHAR" property="plchd" />
    <result column="Plchd_Adr" jdbcType="VARCHAR" property="plchdAdr" />
    <result column="Insrd" jdbcType="VARCHAR" property="insrd" />
    <result column="Insrd_Adr" jdbcType="VARCHAR" property="insrdAdr" />
    <result column="Fst_Benf" jdbcType="VARCHAR" property="fstBenf" />
    <result column="Fst_Benf_Adr" jdbcType="VARCHAR" property="fstBenfAdr" />
    <result column="Ins_Pty_Adr" jdbcType="VARCHAR" property="insPtyAdr" />
    <result column="Ins_Obj_Nm" jdbcType="VARCHAR" property="insObjNm" />
    <result column="Ins_Amt" jdbcType="REAL" property="insAmt" />
    <result column="Dctb_Amt" jdbcType="REAL" property="dctbAmt" />
    <result column="EpAp" jdbcType="VARCHAR" property="epap" />
    <result column="Ins_StDt" jdbcType="CHAR" property="insStdt" />
    <result column="Ins_EdDt" jdbcType="CHAR" property="insEddt" />
    <result column="Is_Need_Ins" jdbcType="INTEGER" property="isNeedIns" />
    <result column="WnLn" jdbcType="REAL" property="wnln" />
  </resultMap>
  <sql id="query_criteria">  
  	 	  <if test="id  != null and id  != ''">
        and ID  = #{id ,jdbcType=INTEGER}
      </if>
	  <if test="arId  != null and arId  != ''">
        and t3.AR_ID like binary CONCAT('%', #{arId ,jdbcType=CHAR},'%')       
      </if>
	  <if test="processInstId  != null and processInstId  != ''">
        and PROCESS_INST_ID  = #{processInstId ,jdbcType=VARCHAR}
      </if>
	  <if test="arTp  != null and arTp  != ''">
        and AR_Tp  = #{arTp ,jdbcType=CHAR}
      </if>
      <if test="isNeedIns  != null and isNeedIns  != ''">
        and Is_Need_Ins  = #{isNeedIns ,jdbcType=INTEGER}
      </if>
	  <if test="fncEntp  != null and fncEntp  != ''">
        and Fnc_Entp  = #{fncEntp ,jdbcType=INTEGER}
      </if>
	  <if test="ustrmSplr  != null and ustrmSplr  != ''">
        and Ustrm_Splr  = #{ustrmSplr ,jdbcType=INTEGER}
      </if>
	  <if test="stgco  != null and stgco  != ''">
        and StgCo  = #{stgco ,jdbcType=INTEGER}
      </if>
	  <if test="bnk  != null and bnk  != ''">
        and Bnk  = #{bnk ,jdbcType=INTEGER}
      </if>
	  <if test="lgstcCo  != null and lgstcCo  != ''">
        and Lgstc_Co  = #{lgstcCo ,jdbcType=INTEGER}
      </if>
	  <if test="insCo  != null and insCo  != ''">
        and Ins_Co  = #{insCo ,jdbcType=INTEGER}
      </if>
	  <if test="splchainCo  != null and splchainCo  != ''">
        and SplChain_Co  = #{splchainCo ,jdbcType=INTEGER}
      </if>
	  <if test="arStdt  != null and arStdt  != ''">
        and AR_StDt  = #{arStdt ,jdbcType=CHAR}
      </if>
	  <if test="arEddt  != null and arEddt  != ''">
        and AR_EdDt  = #{arEddt ,jdbcType=CHAR}
      </if>
	  <if test="pckupgdsCyc  != null and pckupgdsCyc  != ''">
        and PckUpGds_Cyc  = #{pckupgdsCyc ,jdbcType=INTEGER}
      </if>
	  <if test="btp  != null and btp  != ''">
        and BTp  = #{btp ,jdbcType=CHAR}
      </if>
	  <if test="fncPctg  != null and fncPctg  != ''">
        and Fnc_Pctg  = #{fncPctg ,jdbcType=REAL}
      </if>
	  <if test="prpyGldRto  != null and prpyGldRto  != ''">
        and Prpy_Gld_Rto  = #{prpyGldRto ,jdbcType=REAL}
      </if>
	  <if test="lmt  != null and lmt  != ''">
        and Lmt  = #{lmt ,jdbcType=REAL}
      </if>
	  <if test="crdn  != null and crdn  != ''">
        and Crdn  = #{crdn ,jdbcType=REAL}
      </if>
	  <if test="clsposLn  != null and clsposLn  != ''">
        and Clspos_Ln  = #{clsposLn ,jdbcType=REAL}
      </if>
	  <if test="svcfeeCmd  != null and svcfeeCmd  != ''">
        and SvcFee_CMd  = #{svcfeeCmd ,jdbcType=CHAR}
      </if>
	  <if test="splovCrrovMod  != null and splovCrrovMod  != ''">
        and SplOv_CrrOv_Mod  = #{splovCrrovMod ,jdbcType=CHAR}
      </if>
	  <if test="arSt  != null and arSt  != ''">
        and AR_St  = #{arSt ,jdbcType=CHAR}
      </if>
	  <if test="tms  != null and tms  != ''">
        and Tms  = #{tms ,jdbcType=TIMESTAMP}
      </if>
	  <if test="crtPsn  != null and crtPsn  != ''">
        and Crt_Psn  = #{crtPsn ,jdbcType=VARCHAR}
      </if>
	  <if test="crtTm  != null and crtTm  != ''">
        and Crt_Tm  = #{crtTm ,jdbcType=TIMESTAMP}
      </if>
	  <if test="plchd  != null and plchd  != ''">
        and Plchd  = #{plchd ,jdbcType=VARCHAR}
      </if>
	  <if test="plchdAdr  != null and plchdAdr  != ''">
        and Plchd_Adr  = #{plchdAdr ,jdbcType=VARCHAR}
      </if>
	  <if test="insrd  != null and insrd  != ''">
        and Insrd  = #{insrd ,jdbcType=VARCHAR}
      </if>
	  <if test="insrdAdr  != null and insrdAdr  != ''">
        and Insrd_Adr  = #{insrdAdr ,jdbcType=VARCHAR}
      </if>
	  <if test="fstBenf  != null and fstBenf  != ''">
        and Fst_Benf  = #{fstBenf ,jdbcType=VARCHAR}
      </if>
	  <if test="fstBenfAdr  != null and fstBenfAdr  != ''">
        and Fst_Benf_Adr  = #{fstBenfAdr ,jdbcType=VARCHAR}
      </if>
	  <if test="insPtyAdr  != null and insPtyAdr  != ''">
        and Ins_Pty_Adr  = #{insPtyAdr ,jdbcType=VARCHAR}
      </if>
	  <if test="insObjNm  != null and insObjNm  != ''">
        and Ins_Obj_Nm  = #{insObjNm ,jdbcType=VARCHAR}
      </if>
	  <if test="insAmt  != null and insAmt  != ''">
        and Ins_Amt  = #{insAmt ,jdbcType=REAL}
      </if>
	  <if test="dctbAmt  != null and dctbAmt  != ''">
        and Dctb_Amt  = #{dctbAmt ,jdbcType=REAL}
      </if>
	  <if test="epap  != null and epap  != ''">
        and EpAp  = #{epap ,jdbcType=VARCHAR}
      </if>
	  <if test="insStdt  != null and insStdt  != ''">
        and Ins_StDt  = #{insStdt ,jdbcType=CHAR}
      </if>
	  <if test="insEddt  != null and insEddt  != ''">
        and Ins_EdDt  = #{insEddt ,jdbcType=CHAR}
      </if>
      <if test="queryType  != null and queryType  == 1">
        and AR_St  = '06'
      </if>
      <if test="queryType  != null and queryType  == 2">
        and AR_St  in ('02', '03', '04', '05')
      </if>  
      <if test="queryType  != null and queryType  == 3">
        and AR_St  = '07'
      </if>
      <if test="queryType  != null and queryType  == 4">
        and AR_St  in ('01', '10', '11')
      </if> 
	</sql>
   
   <sql id="Base_Column_List">
     ID,AR_ID,Is_Need_Ins,PROCESS_INST_ID,AR_Tp,Pch_Prty,AR_StDt,AR_EdDt,Splr,PckUpGds_Cyc,Agrm_Stg,BTp,Fnc_Pctg,Prpy_Gld_Rto,Lmt,Crdn,Clspos_Ln,SvcFee_CMd,SplOv_CrrOv_Mod,AR_St,Tms,Crt_Psn,Crt_Tm,Cfm_Psn,Cfm_Tm,FrstIns_CkOp,FrstIns_Adt_Psn,FrstIns_Adt_Tm,Bnk,Lgstc,Ins_Co,SplChain,SndInsc_CkOp,SndIns_Adt_Psn,SndIns_Adt_Tm,Plchd,Plchd_Adr,Insrd,Insrd_Adr,Fst_Benf,Fst_Benf_Adr,Ins_Pty_Adr,Ins_Obj_Nm,Ins_Amt,Dctb_Amt,EpAp,Ins_StDt,Ins_EdDt,WnLn,Is_Need_Ins
   </sql>
   
   <sql id="query_criteria_t8"> 
   <if test="keyWorlds  != null and keyWorlds  != ''">
 and (t8.arId like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.processInstId like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.arTp like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.fncEntpName like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.ustrmSplrName like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.stgcoName like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.bnkName like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.lgstcCoName like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.insCoName like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.splchainCoName like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.arStdt like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.arEddt like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.pckupgdsCyc like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.btp like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.fncPctg like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.prpyGldRto like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.lmt like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.crdn like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.clsposLn like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.svcfeeCmd like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.splovCrrovMod like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.arSt like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.tms like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.crtPsn like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.crtTm like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.plchd like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.plchdAdr like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.insrd like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.insrdAdr like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.fstBenf like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.fstBenfAdr like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.insPtyAdr like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.insObjNm like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.insAmt like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.dctbAmt like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.epap like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.insStdt like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.insEddt like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 or t8.isNeedIns like binary CONCAT('%', #{keyWorlds ,jdbcType=CHAR},'%')
 )
      </if>	
              
      </sql>
  
   <select id="selectByT1ARInfDcQuery" parameterType="com.xai.tt.dc.client.vo.inVo.ArManagementInVo" resultType="com.xai.tt.dc.client.vo.outVo.QueryPageArOutVo">
		SELECT t8.* FROM (
		SELECT
	t6.ID AS id,
	t6.Is_Need_Ins AS isNeedIns,
	t6.AR_ID AS arId,
	t6.PROCESS_INST_ID AS processInstId,
	t6.AR_Tp AS arTp,
	_get_coname_func (t6.Fnc_Entp) AS fncEntpName,
	_get_coname_func (t6.Ustrm_Splr) AS ustrmSplrName,
	_get_coname_func (t6.StgCo) AS stgcoName,
	_get_coname_func (t6.Bnk) AS bnkName,
	_get_coname_func (t6.Lgstc_Co) AS lgstcCoName,
	_get_coname_func (t6.Ins_Co) AS insCoName,
	_get_coname_func (t6.SplChain_Co) AS splchainCoName,
	t6.AR_StDt AS arStdt,
	t6.AR_EdDt AS arEddt,
	t6.PckUpGds_Cyc AS pckupgdsCyc,
	t6.BTp AS btp,
	t6.Fnc_Pctg AS fncPctg,
	t6.Prpy_Gld_Rto AS prpyGldRto,
	t6.Lmt AS lmt,
	t6.Crdn AS crdn,
	t6.Clspos_Ln AS clsposLn,
	t6.SvcFee_CMd AS svcfeeCmd,
	t6.SplOv_CrrOv_Mod AS splovCrrovMod,
	t6.AR_St AS arSt,
	t6.Tms AS tms,
	t6.Crt_Psn AS crtPsn,
	t6.Crt_Tm AS crtTm,
	t6.Plchd AS plchd,
	t6.Plchd_Adr AS plchdAdr,
	t6.Insrd AS insrd,
	t6.Insrd_Adr AS insrdAdr,
	t6.Fst_Benf AS fstBenf,
	t6.Fst_Benf_Adr AS fstBenfAdr,
	t6.Ins_Pty_Adr AS insPtyAdr,
	t6.Ins_Obj_Nm AS insObjNm,
	t6.Ins_Amt AS insAmt,
	t6.Dctb_Amt AS dctbAmt,
	t6.EpAp AS epap,
	t6.Ins_StDt AS insStdt,
	t6.Ins_EdDt AS insEddt,
	_trans_lnk_inf_def_func (t4.TASK_DEF_KEY_, 1) AS aplyPcstpCdName,
	CASE t4.TASK_DEF_KEY_
WHEN 'AR_Itt_Pltfrm' THEN
	'01'
WHEN 'AR_Cfm_SplChain' THEN
	'02'
WHEN 'AR_Cfm_Dwstr_Entp' THEN
	'03'
WHEN 'AR_Cfm_Ins_Co' THEN
	'04'
WHEN 'AR_FrstIns_Pltfrm' THEN
	'05'
WHEN 'AR_SndInsc_Pltfrm' THEN
	'06'
WHEN 'AR_Tmt_Pltfrm' THEN
	'07'
ELSE
	''
END AS aplyPcstpCd,
t6.WnLn as wnln

FROM
	(
		SELECT DISTINCT
			t3.*
		FROM
			t1_ar_inf t3,
			USER t5
		WHERE
						t3.SplChain_Co = t5.SplChain_Co
			<include refid="query_criteria"></include>
	) t6
LEFT JOIN (
	SELECT
		t1.PROC_INST_ID_,
		t2.GROUP_ID_,
		t1.TASK_DEF_KEY_
	FROM
		act_ru_task t1,
		act_ru_identitylink t2
	WHERE
		t1.ID_ = t2.TASK_ID_ #	AND t2.GROUP_ID_ = '01'
) t4 ON t6.PROCESS_INST_ID = t4.PROC_INST_ID_ 

    <if test="orderBy != null and orderBy != ''">
	   ORDER BY ${orderBy}
    </if>
) t8 
where 1=1 
<include refid="query_criteria_t8"></include>
 
  </select>
  
  <select id="count" resultType="java.lang.Integer">
 	SELECT count(*) FROM (
		SELECT
	t6.ID AS id,
	t6.Is_Need_Ins AS isNeedIns,
	t6.AR_ID AS arId,
	t6.PROCESS_INST_ID AS processInstId,
	t6.AR_Tp AS arTp,
	_get_coname_func (t6.Fnc_Entp) AS fncEntpName,
	_get_coname_func (t6.Ustrm_Splr) AS ustrmSplrName,
	_get_coname_func (t6.StgCo) AS stgcoName,
	_get_coname_func (t6.Bnk) AS bnkName,
	_get_coname_func (t6.Lgstc_Co) AS lgstcCoName,
	_get_coname_func (t6.Ins_Co) AS insCoName,
	_get_coname_func (t6.SplChain_Co) AS splchainCoName,
	t6.AR_StDt AS arStdt,
	t6.AR_EdDt AS arEddt,
	t6.PckUpGds_Cyc AS pckupgdsCyc,
	t6.BTp AS btp,
	t6.Fnc_Pctg AS fncPctg,
	t6.Prpy_Gld_Rto AS prpyGldRto,
	t6.Lmt AS lmt,
	t6.Crdn AS crdn,
	t6.Clspos_Ln AS clsposLn,
	t6.SvcFee_CMd AS svcfeeCmd,
	t6.SplOv_CrrOv_Mod AS splovCrrovMod,
	t6.AR_St AS arSt,
	t6.Tms AS tms,
	t6.Crt_Psn AS crtPsn,
	t6.Crt_Tm AS crtTm,
	t6.Plchd AS plchd,
	t6.Plchd_Adr AS plchdAdr,
	t6.Insrd AS insrd,
	t6.Insrd_Adr AS insrdAdr,
	t6.Fst_Benf AS fstBenf,
	t6.Fst_Benf_Adr AS fstBenfAdr,
	t6.Ins_Pty_Adr AS insPtyAdr,
	t6.Ins_Obj_Nm AS insObjNm,
	t6.Ins_Amt AS insAmt,
	t6.Dctb_Amt AS dctbAmt,
	t6.EpAp AS epap,
	t6.Ins_StDt AS insStdt,
	t6.Ins_EdDt AS insEddt,
	CASE t4.TASK_DEF_KEY_
WHEN 'AR_Itt_Pltfrm' THEN
	'01'
WHEN 'AR_Cfm_SplChain' THEN
	'02'
WHEN 'AR_Cfm_Dwstr_Entp' THEN
	'03'
WHEN 'AR_Cfm_Ins_Co' THEN
	'04'
WHEN 'AR_FrstIns_Pltfrm' THEN
	'05'
WHEN 'AR_SndInsc_Pltfrm' THEN
	'06'
WHEN 'AR_Tmt_Pltfrm' THEN
	'07'
ELSE
	''
END AS aplyPcstpCd
FROM
	(
		SELECT DISTINCT
			t3.*
		FROM
			t1_ar_inf t3,
			USER t5
		WHERE
						t3.SplChain_Co = t5.SplChain_Co
			<include refid="query_criteria"></include>
	) t6
LEFT JOIN (
	SELECT
		t1.PROC_INST_ID_,
		t2.GROUP_ID_,
		t1.TASK_DEF_KEY_
	FROM
		act_ru_task t1,
		act_ru_identitylink t2
	WHERE
		t1.ID_ = t2.TASK_ID_ #	AND t2.GROUP_ID_ = '01'
) t4 ON t6.PROCESS_INST_ID = t4.PROC_INST_ID_ 

    <if test="orderBy != null and orderBy != ''">
	   ORDER BY ${orderBy}
    </if>
) t8	
where 1=1 
<include refid="query_criteria_t8"></include>
  </select>
  
  
    <select id="queryArDetail" parameterType="java.lang.Integer" resultType="com.xai.tt.dc.client.vo.T1ARInfDetailVo">
SELECT
	t3.ID AS id,
	t3.Is_Need_Ins AS isNeedIns,
	t3.AR_ID AS arId,
	t3.PROCESS_INST_ID AS processInstId,
	t3.AR_Tp AS arTp,
	t3.Fnc_Entp AS fncEntp,
	t3.Ustrm_Splr AS ustrmSplr,
	t3.StgCo AS stgco,
	t3.Bnk AS bnk,
	t3.Lgstc_Co AS lgstcCo,
	t3.Ins_Co AS insCo,
	t3.SplChain_Co AS splchainCo,
	t3.AR_StDt AS arStdt,
	t3.AR_EdDt AS arEddt,
	t3.PckUpGds_Cyc AS pckupgdsCyc,
	t3.BTp AS btp,
	t3.Fnc_Pctg AS fncPctg,
	t3.Prpy_Gld_Rto AS prpyGldRto,
	t3.Lmt AS lmt,
	t3.Crdn AS crdn,
	t3.Clspos_Ln AS clsposLn,
	t3.SvcFee_CMd AS svcfeeCmd,
	t3.SplOv_CrrOv_Mod AS splovCrrovMod,
	t3.AR_St AS arSt,
	t3.Tms AS tms,
	t3.Crt_Psn AS crtPsn,
	t3.Crt_Tm AS crtTm,
	t3.Plchd AS plchd,
	t3.Plchd_Adr AS plchdAdr,
	t3.Insrd AS insrd,
	t3.Insrd_Adr AS insrdAdr,
	t3.Fst_Benf AS fstBenf,
	t3.Fst_Benf_Adr AS fstBenfAdr,
	t3.Ins_Pty_Adr AS insPtyAdr,
	t3.Ins_Obj_Nm AS insObjNm,
	t3.Ins_Amt AS insAmt,
	t3.Dctb_Amt AS dctbAmt,
	t3.EpAp AS epap,
	t3.Ins_StDt AS insStdt,
	t3.Ins_EdDt AS insEddt,
	_trans_lnk_inf_def_func (t4.TASK_DEF_KEY_, 1) AS aplyPcstpCdName,
	CASE t4.TASK_DEF_KEY_
WHEN 'AR_Itt_Pltfrm' THEN
	'01'
WHEN 'AR_Cfm_SplChain' THEN
	'02'
WHEN 'AR_Cfm_Dwstr_Entp' THEN
	'03'
WHEN 'AR_Cfm_Ins_Co' THEN
	'04'
WHEN 'AR_FrstIns_Pltfrm' THEN
	'05'
WHEN 'AR_SndInsc_Pltfrm' THEN
	'06'
WHEN 'AR_Tmt_Pltfrm' THEN
	'07'
ELSE
	''
END AS aplyPcstpCd,
t3.WnLn as wnln
FROM
	(
		SELECT
			*
		FROM
			t1_ar_inf
		where ID=#{id,jdbcType=INTEGER}
	) t3
LEFT JOIN (
	SELECT
		t1.PROC_INST_ID_,
		t2.GROUP_ID_,
		t1.TASK_DEF_KEY_
	FROM
		act_ru_task t1,
		act_ru_identitylink t2
	WHERE
		t1.ID_ = t2.TASK_ID_
) t4 ON t3.PROCESS_INST_ID = t4.PROC_INST_ID_
  </select>
  
      <select id="queryArDetailByArId" parameterType="java.lang.String" resultType="com.xai.tt.dc.client.vo.T1ARInfDetailVo">
SELECT
	t3.ID AS id,
	t3.Is_Need_Ins AS isNeedIns,
	t3.AR_ID AS arId,
	t3.PROCESS_INST_ID AS processInstId,
	t3.AR_Tp AS arTp,
	t3.Fnc_Entp AS fncEntp,
	t3.Ustrm_Splr AS ustrmSplr,
	t3.StgCo AS stgco,
	t3.Bnk AS bnk,
	t3.Lgstc_Co AS lgstcCo,
	t3.Ins_Co AS insCo,
	t3.SplChain_Co AS splchainCo,
	t3.AR_StDt AS arStdt,
	t3.AR_EdDt AS arEddt,
	t3.PckUpGds_Cyc AS pckupgdsCyc,
	t3.BTp AS btp,
	t3.Fnc_Pctg AS fncPctg,
	t3.Prpy_Gld_Rto AS prpyGldRto,
	t3.Lmt AS lmt,
	t3.Crdn AS crdn,
	t3.Clspos_Ln AS clsposLn,
	t3.SvcFee_CMd AS svcfeeCmd,
	t3.SplOv_CrrOv_Mod AS splovCrrovMod,
	t3.AR_St AS arSt,
	t3.Tms AS tms,
	t3.Crt_Psn AS crtPsn,
	t3.Crt_Tm AS crtTm,
	t3.Plchd AS plchd,
	t3.Plchd_Adr AS plchdAdr,
	t3.Insrd AS insrd,
	t3.Insrd_Adr AS insrdAdr,
	t3.Fst_Benf AS fstBenf,
	t3.Fst_Benf_Adr AS fstBenfAdr,
	t3.Ins_Pty_Adr AS insPtyAdr,
	t3.Ins_Obj_Nm AS insObjNm,
	t3.Ins_Amt AS insAmt,
	t3.Dctb_Amt AS dctbAmt,
	t3.EpAp AS epap,
	t3.Ins_StDt AS insStdt,
	t3.Ins_EdDt AS insEddt,
	_trans_lnk_inf_def_func (t4.TASK_DEF_KEY_, 1) AS aplyPcstpCdName,
	CASE t4.TASK_DEF_KEY_
WHEN 'AR_Itt_Pltfrm' THEN
	'01'
WHEN 'AR_Cfm_SplChain' THEN
	'02'
WHEN 'AR_Cfm_Dwstr_Entp' THEN
	'03'
WHEN 'AR_Cfm_Ins_Co' THEN
	'04'
WHEN 'AR_FrstIns_Pltfrm' THEN
	'05'
WHEN 'AR_SndInsc_Pltfrm' THEN
	'06'
WHEN 'AR_Tmt_Pltfrm' THEN
	'07'
ELSE
	''
END AS aplyPcstpCd,
t3.WnLn as wnln
FROM
	(
		SELECT
			*
		FROM
			t1_ar_inf
		where AR_ID=#{arId,jdbcType=VARCHAR}
	) t3
LEFT JOIN (
	SELECT
		t1.PROC_INST_ID_,
		t2.GROUP_ID_,
		t1.TASK_DEF_KEY_
	FROM
		act_ru_task t1,
		act_ru_identitylink t2
	WHERE
		t1.ID_ = t2.TASK_ID_
) t4 ON t3.PROCESS_INST_ID = t4.PROC_INST_ID_
  </select>
</mapper>